<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="3" time="0.168" timestamp="2024-11-11T09:19:31.737424-03:00" hostname="projeto-seven"><testcase classname="tests.test_load" name="test_load_positive_has_2_people" time="0.007"><failure message="AssertionError: assert 3 == 2&#10; +  where 3 = len(['Jim Halpert,Sales,Salesman,jim@dundlermifflin.com', 'Rogerio,Administration,CEO,rogerio@dundlermifflin.com', 'Gabe Lewis, Directory, Manager, glewis@dundlermifflin.com'])&#10; +    where ['Jim Halpert,Sales,Salesman,jim@dundlermifflin.com', 'Rogerio,Administration,CEO,rogerio@dundlermifflin.com', 'Gabe Lewis, Directory, Manager, glewis@dundlermifflin.com'] = load('/home/rogerio/cursos/linuxtips/python_base/dundie-rewards/tests/assets/people.csv')">request = &lt;FixtureRequest for &lt;Function test_load_positive_has_2_people&gt;&gt;

    @pytest.mark.unit
    @pytest.mark.high
    def test_load_positive_has_2_people(request):
        '''Test function load function'''
&gt;       assert len(load(PEOPLE_FILE)) ==2
E       AssertionError: assert 3 == 2
E        +  where 3 = len(['Jim Halpert,Sales,Salesman,jim@dundlermifflin.com', 'Rogerio,Administration,CEO,rogerio@dundlermifflin.com', 'Gabe Lewis, Directory, Manager, glewis@dundlermifflin.com'])
E        +    where ['Jim Halpert,Sales,Salesman,jim@dundlermifflin.com', 'Rogerio,Administration,CEO,rogerio@dundlermifflin.com', 'Gabe Lewis, Directory, Manager, glewis@dundlermifflin.com'] = load('/home/rogerio/cursos/linuxtips/python_base/dundie-rewards/tests/assets/people.csv')

/home/rogerio/cursos/linuxtips/python_base/dundie-rewards/tests/test_load.py:19: AssertionError</failure></testcase><testcase classname="tests.test_load" name="test_load_positive_first_name_starts_with_j" time="0.003" /><testcase classname="integration.test_load" name="test_load" time="0.083" /></testsuite></testsuites>